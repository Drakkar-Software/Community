FROM ruby:2.7.5-alpine as Builder

ARG GITHUB_TOKEN

# Add basic packages
RUN apk add --no-cache build-base postgresql-dev git nodejs yarn tzdata file

WORKDIR /app

# Install standard Node modules
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Install standard gems
COPY Gemfile Gemfile.lock ./
RUN gem install bundler -v "~>2.2.33" && \
    bundle config --local GITHUB__COM x-oauth-basic:$GITHUB_TOKEN && \
    bundle config --local frozen 1 && \
    bundle config --local build.sassc --disable-march-tune-native && \
    bundle install -j4 --retry 3

# Install Ruby gems (for production only)
RUN bundle config --local without 'development test' && \
    bundle install -j4 --retry 3 && \
    # Remove unneeded gems
    bundle clean --force && \
    # Remove unneeded files from installed gems (cached *.gem, *.o, *.c)
    rm -rf /usr/local/bundle/cache/*.gem && \
    find /usr/local/bundle/gems/ -name "*.c" -delete && \
    find /usr/local/bundle/gems/ -name "*.o" -delete

COPY . /app

RUN yarn build && \
    RAILS_ENV=production \
            DB_ADAPTER=nulldb \
            SECRET_KEY_BASE=dummy \
            RAILS_MASTER_KEY=dummy \
            bundle exec rails assets:precompile

# Remove folders not needed in resulting image
RUN rm -rf node_modules tmp/cache vendor/bundle test spec

FROM ruby:3.0.2-alpine

# Add basic packages
RUN apk add --no-cache \
      git \
      postgresql-client \
      imagemagick \
      tzdata \
      file \
      imagemagick \
      nodejs \
      terraform

# Configure Rails
ENV RAILS_LOG_TO_STDOUT true
ENV RAILS_SERVE_STATIC_FILES true

WORKDIR /app

# Expose Puma port
EXPOSE 3000

# This image is for production env only
ENV RAILS_ENV production

# Add user and create tmp/pids folders to fix puma missing pid folder
RUN addgroup -g 1000 -S app \
    && adduser -u 1000 -S app -G app

# Copy app with gems from former build stage
COPY --from=Builder --chown=app:app /usr/local/bundle/ /usr/local/bundle/
COPY --from=Builder --chown=app:app /app /app

RUN mkdir -p tmp/pids && chown -R app:app tmp

USER app

# Start up
CMD ["docker/startup.sh"]
